{"version":3,"sources":["components/Cards/Cards.module.css","api/index.js","components/Cards/Cards.jsx","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","images/image.png","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","url","fetchData","country","a","changeableUrl","axios","get","data","confirmed","recovered","deaths","lastUpdate","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Info","className","styles","container","Grid","spacing","justify","item","xs","md","component","Card","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","coutry","fetchedData","setState","this","image","src","corona","alt","Cards","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.091c3337.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__29-F3\",\"card\":\"Cards_card__38lrZ\",\"infected\":\"Cards_infected__bTLns\",\"recovered\":\"Cards_recovered__18S3V\",\"deaths\":\"Cards_deaths__41NLc\"};","import axios from 'axios';\r\n\r\nconst url =\"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableUrl=url;\r\n    if(country){\r\n        changeableUrl=`${url}/countries/${country}`\r\n    }\r\n    try{\r\n        const {data: { confirmed, recovered, deaths,lastUpdate }} = await axios.get(changeableUrl);\r\n        return {confirmed,recovered,deaths,lastUpdate }\r\n        \r\n    } catch (error){\r\n          return error;\r\n    }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n    try{\r\n         const { data } =await axios.get(`${url}/daily`);\r\n         const modifiedData=data.map((dailyData) => ({\r\n          confirmed: dailyData.confirmed.total,\r\n          deaths:dailyData.deaths.total,\r\n          date: dailyData.reportDate\r\n          } ));\r\n          return modifiedData;\r\n    }\r\n    catch(error){\r\n             return error\r\n    }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n      const { data: { countries } } = await axios.get(`${url}/countries`);\r\n  \r\n      return countries.map((country) => country.name);\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  };","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nconst Info = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  if (!confirmed) {\r\n    return 'Loading...';\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.infected)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Infected\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              <CountUp start={0} end={confirmed.value} duration={2.75} separator=\",\" />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\" component=\"p\">\r\n              Number of active cases of COVID-19.\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.recovered)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Recovered\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              <CountUp start={0} end={recovered.value} duration={2.75} separator=\",\" />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\" component=\"p\">\r\n              Number of recoveries from COVID-19.\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.deaths)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Deaths\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              <CountUp start={0} end={deaths.value} duration={2.75} separator=\",\" />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\" component=\"p\">\r\n              Number of deaths caused by COVID-19.\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\nexport default Info;\r\n","import React, {useState,useEffect} from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport { StylesProvider } from '@material-ui/core';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart=({ data: {confirmed,recovered,deaths}, country }) => {\r\n    const [dailyData, setDailyData]=useState([]);\r\n    useEffect(()=> {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        \r\n        fetchAPI();\r\n    },[]);\r\n\r\n    const lineChart=(\r\n      dailyData.length\r\n      ? ( \r\n      <Line\r\n        data={{\r\n           labels:dailyData.map(({ date })=>date),\r\n           datasets:[{\r\n                data: dailyData.map(({ confirmed })=> confirmed),\r\n                label: 'Infected',\r\n                borderColor: '#3333ff',\r\n                fill:true,\r\n           }, {\r\n            data: dailyData.map(({ deaths })=> deaths),\r\n            label: 'Deaths',\r\n            borderColor: 'red',\r\n            backgroundColor: 'rgba(255,0,0,0.5)',\r\n            fill:true,\r\n           }]\r\n        }}\r\n        />) : null\r\n    );\r\n\r\n    const barChart = (\r\n       confirmed\r\n        ? (\r\n            <Bar\r\n               data={{\r\n                    labels: ['Infected','Recovered','Deaths'],\r\n                    datasets: [{\r\n                        label: 'People',\r\n                        backgroundColor: ['rgba(0, 0, 255, 0.5)',\r\n                        'rgba(0, 255, 0, 0.5)',\r\n                        'rgba(255, 0,0, 0.5)'\r\n                    ],\r\n                    data: [confirmed.value, recovered.value, deaths.value]\r\n                    }]\r\n               }}\r\n               options={{\r\n                   legend: { display: false },\r\n                   title: { display:true, text:`Current state in ${country}`}\r\n               }}\r\n             />\r\n        ) : null\r\n    )\r\n    \r\n    return (\r\n       <div className={styles.container}>\r\n         {country ? barChart : lineChart}\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default Chart;\r\n","import React,{ useState,useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport { fetchCountries } from '../../api';\r\nimport styles from './CountryPicker.module.css';\r\n\r\nconst CountryPicker=({ handleCountryChange }) => {\r\n    const [ fetchedCountries, setFetchedCountries]= useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n        fetchAPI();\r\n    },[]);\r\n    \r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n        <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value) } >\r\n          <option value=\"\">Global</option>\r\n          {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n        </NativeSelect>\r\n      </FormControl>\r\n    );\r\n};\r\n\r\nexport default CountryPicker;\r\n","import React from 'react';\nimport styles from './App.module.css';\nimport { fetchData } from './api';\nimport corona from './images/image.png';\n\nimport {Cards, Chart, CountryPicker} from './components'\n\nclass App extends React.Component{\n\n    state = {\n      data:{},\n      coutry: ''\n    }\n\n  async componentDidMount()\n  {\n    const fetchedData= await fetchData();\n     this.setState({data:fetchedData})\n  }\n\n  handleCountryChange = async (country) => {\n      const fetchedData= await fetchData(country);\n       this.setState({ data: fetchedData,country:country });\n  }\n\n  render(){\n    const {data,country}=this.state;\n    return(\n      <div className={styles.container}>\n        <img className={styles.image} src={corona} alt=\"COVID-19\" />\n        <Cards data={data} />\n        <CountryPicker handleCountryChange={this.handleCountryChange}/>\n        <Chart data={data} country={country}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2PpUk\",\"image\":\"App_image__hHSvm\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1VDY3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__sQ8Xm\"};"],"sourceRoot":""}